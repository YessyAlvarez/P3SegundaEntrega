//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InterfazWeb.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Grupo", Namespace="http://schemas.datacontract.org/2004/07/Dominio")]
    [System.SerializableAttribute()]
    public partial class Grupo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Codigo {
            get {
                return this.CodigoField;
            }
            set {
                if ((this.CodigoField.Equals(value) != true)) {
                    this.CodigoField = value;
                    this.RaisePropertyChanged("Codigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumPerfil", Namespace="http://schemas.datacontract.org/2004/07/Dominio")]
    public enum EnumPerfil : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoAutorizado = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Admin = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FuncionarioMantenimiento = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Anonimo = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFAddGrupo", ReplyAction="http://tempuri.org/IService1/WCFAddGrupoResponse")]
        bool WCFAddGrupo(string nombreGrupo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFAddGrupo", ReplyAction="http://tempuri.org/IService1/WCFAddGrupoResponse")]
        System.Threading.Tasks.Task<bool> WCFAddGrupoAsync(string nombreGrupo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFAddTramite", ReplyAction="http://tempuri.org/IService1/WCFAddTramiteResponse")]
        bool WCFAddTramite(string titulo, string desc, double costo, int tiempo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFAddTramite", ReplyAction="http://tempuri.org/IService1/WCFAddTramiteResponse")]
        System.Threading.Tasks.Task<bool> WCFAddTramiteAsync(string titulo, string desc, double costo, int tiempo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFGetTramite", ReplyAction="http://tempuri.org/IService1/WCFGetTramiteResponse")]
        System.Collections.Generic.List<WCFService.DTOTramite> WCFGetTramite();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFGetTramite", ReplyAction="http://tempuri.org/IService1/WCFGetTramiteResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WCFService.DTOTramite>> WCFGetTramiteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFListarTramites", ReplyAction="http://tempuri.org/IService1/WCFListarTramitesResponse")]
        System.Collections.Generic.List<WCFService.DTOTramite> WCFListarTramites();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFListarTramites", ReplyAction="http://tempuri.org/IService1/WCFListarTramitesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WCFService.DTOTramite>> WCFListarTramitesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFObtenerTramitePorId", ReplyAction="http://tempuri.org/IService1/WCFObtenerTramitePorIdResponse")]
        WCFService.DTOTramite WCFObtenerTramitePorId(int idTramite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFObtenerTramitePorId", ReplyAction="http://tempuri.org/IService1/WCFObtenerTramitePorIdResponse")]
        System.Threading.Tasks.Task<WCFService.DTOTramite> WCFObtenerTramitePorIdAsync(int idTramite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFEditarTramite", ReplyAction="http://tempuri.org/IService1/WCFEditarTramiteResponse")]
        void WCFEditarTramite(int Id, string Descripcion, double Costo, int Tiempo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFEditarTramite", ReplyAction="http://tempuri.org/IService1/WCFEditarTramiteResponse")]
        System.Threading.Tasks.Task WCFEditarTramiteAsync(int Id, string Descripcion, double Costo, int Tiempo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFAddEtapa", ReplyAction="http://tempuri.org/IService1/WCFAddEtapaResponse")]
        bool WCFAddEtapa(string Codigo, string Descripcion, int LapsoMax, int IdTramite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFAddEtapa", ReplyAction="http://tempuri.org/IService1/WCFAddEtapaResponse")]
        System.Threading.Tasks.Task<bool> WCFAddEtapaAsync(string Codigo, string Descripcion, int LapsoMax, int IdTramite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFListarEtapas", ReplyAction="http://tempuri.org/IService1/WCFListarEtapasResponse")]
        System.Collections.Generic.List<WCFService.DTOEtapa> WCFListarEtapas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFListarEtapas", ReplyAction="http://tempuri.org/IService1/WCFListarEtapasResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WCFService.DTOEtapa>> WCFListarEtapasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFEditarEtapaCodDes", ReplyAction="http://tempuri.org/IService1/WCFEditarEtapaCodDesResponse")]
        bool WCFEditarEtapaCodDes(string codigo, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFEditarEtapaCodDes", ReplyAction="http://tempuri.org/IService1/WCFEditarEtapaCodDesResponse")]
        System.Threading.Tasks.Task<bool> WCFEditarEtapaCodDesAsync(string codigo, string descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFGuardarTxt", ReplyAction="http://tempuri.org/IService1/WCFGuardarTxtResponse")]
        bool WCFGuardarTxt();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFGuardarTxt", ReplyAction="http://tempuri.org/IService1/WCFGuardarTxtResponse")]
        System.Threading.Tasks.Task<bool> WCFGuardarTxtAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFExisteNombreTramite", ReplyAction="http://tempuri.org/IService1/WCFExisteNombreTramiteResponse")]
        bool WCFExisteNombreTramite(string nombreTramite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFExisteNombreTramite", ReplyAction="http://tempuri.org/IService1/WCFExisteNombreTramiteResponse")]
        System.Threading.Tasks.Task<bool> WCFExisteNombreTramiteAsync(string nombreTramite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFListarGrupos", ReplyAction="http://tempuri.org/IService1/WCFListarGruposResponse")]
        System.Collections.Generic.List<WCFService.DTOGrupo> WCFListarGrupos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFListarGrupos", ReplyAction="http://tempuri.org/IService1/WCFListarGruposResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WCFService.DTOGrupo>> WCFListarGruposAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFGetGrupo", ReplyAction="http://tempuri.org/IService1/WCFGetGrupoResponse")]
        System.Collections.Generic.List<WCFService.DTOGrupo> WCFGetGrupo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFGetGrupo", ReplyAction="http://tempuri.org/IService1/WCFGetGrupoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WCFService.DTOGrupo>> WCFGetGrupoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFObtenerGrupoPorId", ReplyAction="http://tempuri.org/IService1/WCFObtenerGrupoPorIdResponse")]
        WCFService.DTOGrupo WCFObtenerGrupoPorId(int idGrupo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFObtenerGrupoPorId", ReplyAction="http://tempuri.org/IService1/WCFObtenerGrupoPorIdResponse")]
        System.Threading.Tasks.Task<WCFService.DTOGrupo> WCFObtenerGrupoPorIdAsync(int idGrupo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFEditGrupo", ReplyAction="http://tempuri.org/IService1/WCFEditGrupoResponse")]
        void WCFEditGrupo(int idGrupo, string nombreGrupo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFEditGrupo", ReplyAction="http://tempuri.org/IService1/WCFEditGrupoResponse")]
        System.Threading.Tasks.Task WCFEditGrupoAsync(int idGrupo, string nombreGrupo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFValidarUsuario", ReplyAction="http://tempuri.org/IService1/WCFValidarUsuarioResponse")]
        int WCFValidarUsuario(string usuario, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFValidarUsuario", ReplyAction="http://tempuri.org/IService1/WCFValidarUsuarioResponse")]
        System.Threading.Tasks.Task<int> WCFValidarUsuarioAsync(string usuario, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFGetNombreCompleto", ReplyAction="http://tempuri.org/IService1/WCFGetNombreCompletoResponse")]
        string WCFGetNombreCompleto(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFGetNombreCompleto", ReplyAction="http://tempuri.org/IService1/WCFGetNombreCompletoResponse")]
        System.Threading.Tasks.Task<string> WCFGetNombreCompletoAsync(string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFListarGruposVacios", ReplyAction="http://tempuri.org/IService1/WCFListarGruposVaciosResponse")]
        System.Collections.Generic.List<WCFService.DTOGrupo> WCFListarGruposVacios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFListarGruposVacios", ReplyAction="http://tempuri.org/IService1/WCFListarGruposVaciosResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WCFService.DTOGrupo>> WCFListarGruposVaciosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFEliminarGrupo", ReplyAction="http://tempuri.org/IService1/WCFEliminarGrupoResponse")]
        void WCFEliminarGrupo(string nombreGrupo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFEliminarGrupo", ReplyAction="http://tempuri.org/IService1/WCFEliminarGrupoResponse")]
        System.Threading.Tasks.Task WCFEliminarGrupoAsync(string nombreGrupo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFListarPerfiles", ReplyAction="http://tempuri.org/IService1/WCFListarPerfilesResponse")]
        System.Collections.Generic.List<int> WCFListarPerfiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFListarPerfiles", ReplyAction="http://tempuri.org/IService1/WCFListarPerfilesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<int>> WCFListarPerfilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFAddFuncionario", ReplyAction="http://tempuri.org/IService1/WCFAddFuncionarioResponse")]
        bool WCFAddFuncionario(string email, string password, string perfil, string nombreCompleto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFAddFuncionario", ReplyAction="http://tempuri.org/IService1/WCFAddFuncionarioResponse")]
        System.Threading.Tasks.Task<bool> WCFAddFuncionarioAsync(string email, string password, string perfil, string nombreCompleto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFObtenerIdUSuario", ReplyAction="http://tempuri.org/IService1/WCFObtenerIdUSuarioResponse")]
        int WCFObtenerIdUSuario(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFObtenerIdUSuario", ReplyAction="http://tempuri.org/IService1/WCFObtenerIdUSuarioResponse")]
        System.Threading.Tasks.Task<int> WCFObtenerIdUSuarioAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFAddUsuarioGrupo", ReplyAction="http://tempuri.org/IService1/WCFAddUsuarioGrupoResponse")]
        bool WCFAddUsuarioGrupo(int idUsuario, int idGrupo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFAddUsuarioGrupo", ReplyAction="http://tempuri.org/IService1/WCFAddUsuarioGrupoResponse")]
        System.Threading.Tasks.Task<bool> WCFAddUsuarioGrupoAsync(int idUsuario, int idGrupo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFListarGrupoUsuario", ReplyAction="http://tempuri.org/IService1/WCFListarGrupoUsuarioResponse")]
        System.Collections.Generic.List<WCFService.DTOGrupo> WCFListarGrupoUsuario(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFListarGrupoUsuario", ReplyAction="http://tempuri.org/IService1/WCFListarGrupoUsuarioResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WCFService.DTOGrupo>> WCFListarGrupoUsuarioAsync(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFObtenerUsuario", ReplyAction="http://tempuri.org/IService1/WCFObtenerUsuarioResponse")]
        WCFService.DTOUsuario WCFObtenerUsuario(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFObtenerUsuario", ReplyAction="http://tempuri.org/IService1/WCFObtenerUsuarioResponse")]
        System.Threading.Tasks.Task<WCFService.DTOUsuario> WCFObtenerUsuarioAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFListarFuncionarios", ReplyAction="http://tempuri.org/IService1/WCFListarFuncionariosResponse")]
        System.Collections.Generic.List<WCFService.DTOUsuario> WCFListarFuncionarios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFListarFuncionarios", ReplyAction="http://tempuri.org/IService1/WCFListarFuncionariosResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WCFService.DTOUsuario>> WCFListarFuncionariosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFGuardarTxt_Grupos", ReplyAction="http://tempuri.org/IService1/WCFGuardarTxt_GruposResponse")]
        bool WCFGuardarTxt_Grupos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFGuardarTxt_Grupos", ReplyAction="http://tempuri.org/IService1/WCFGuardarTxt_GruposResponse")]
        System.Threading.Tasks.Task<bool> WCFGuardarTxt_GruposAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFGuardarTxt_Funcionarios", ReplyAction="http://tempuri.org/IService1/WCFGuardarTxt_FuncionariosResponse")]
        bool WCFGuardarTxt_Funcionarios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFGuardarTxt_Funcionarios", ReplyAction="http://tempuri.org/IService1/WCFGuardarTxt_FuncionariosResponse")]
        System.Threading.Tasks.Task<bool> WCFGuardarTxt_FuncionariosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFGuardarTxt_Tramites", ReplyAction="http://tempuri.org/IService1/WCFGuardarTxt_TramitesResponse")]
        bool WCFGuardarTxt_Tramites();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFGuardarTxt_Tramites", ReplyAction="http://tempuri.org/IService1/WCFGuardarTxt_TramitesResponse")]
        System.Threading.Tasks.Task<bool> WCFGuardarTxt_TramitesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFAddGrupoTramite", ReplyAction="http://tempuri.org/IService1/WCFAddGrupoTramiteResponse")]
        bool WCFAddGrupoTramite(WCFService.DTOGrupoTramite gt, string tituloTramiteUnico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFAddGrupoTramite", ReplyAction="http://tempuri.org/IService1/WCFAddGrupoTramiteResponse")]
        System.Threading.Tasks.Task<bool> WCFAddGrupoTramiteAsync(WCFService.DTOGrupoTramite gt, string tituloTramiteUnico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFAddGrupoDeGRupoTramitePorIdGT", ReplyAction="http://tempuri.org/IService1/WCFAddGrupoDeGRupoTramitePorIdGTResponse")]
        int WCFAddGrupoDeGRupoTramitePorIdGT(int idGrupoTramite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFAddGrupoDeGRupoTramitePorIdGT", ReplyAction="http://tempuri.org/IService1/WCFAddGrupoDeGRupoTramitePorIdGTResponse")]
        System.Threading.Tasks.Task<int> WCFAddGrupoDeGRupoTramitePorIdGTAsync(int idGrupoTramite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFEditarEtapa", ReplyAction="http://tempuri.org/IService1/WCFEditarEtapaResponse")]
        bool WCFEditarEtapa(string idEtapa, string Descripcion, int tiempo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFEditarEtapa", ReplyAction="http://tempuri.org/IService1/WCFEditarEtapaResponse")]
        System.Threading.Tasks.Task<bool> WCFEditarEtapaAsync(string idEtapa, string Descripcion, int tiempo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFObtenerEtapaPorIdEtapa", ReplyAction="http://tempuri.org/IService1/WCFObtenerEtapaPorIdEtapaResponse")]
        WCFService.DTOEtapa WCFObtenerEtapaPorIdEtapa(string idEtapa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFObtenerEtapaPorIdEtapa", ReplyAction="http://tempuri.org/IService1/WCFObtenerEtapaPorIdEtapaResponse")]
        System.Threading.Tasks.Task<WCFService.DTOEtapa> WCFObtenerEtapaPorIdEtapaAsync(string idEtapa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFObtenerIdGrupoTramitePorIdTramite", ReplyAction="http://tempuri.org/IService1/WCFObtenerIdGrupoTramitePorIdTramiteResponse")]
        int WCFObtenerIdGrupoTramitePorIdTramite(string tituloTramite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFObtenerIdGrupoTramitePorIdTramite", ReplyAction="http://tempuri.org/IService1/WCFObtenerIdGrupoTramitePorIdTramiteResponse")]
        System.Threading.Tasks.Task<int> WCFObtenerIdGrupoTramitePorIdTramiteAsync(string tituloTramite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFObtenerGrupoTramitePorIdTramite", ReplyAction="http://tempuri.org/IService1/WCFObtenerGrupoTramitePorIdTramiteResponse")]
        System.Collections.Generic.List<WCFService.DTOGrupoTramite> WCFObtenerGrupoTramitePorIdTramite(string tituloTramite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WCFObtenerGrupoTramitePorIdTramite", ReplyAction="http://tempuri.org/IService1/WCFObtenerGrupoTramitePorIdTramiteResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WCFService.DTOGrupoTramite>> WCFObtenerGrupoTramitePorIdTramiteAsync(string tituloTramite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : InterfazWeb.ServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<InterfazWeb.ServiceReference.IService1>, InterfazWeb.ServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool WCFAddGrupo(string nombreGrupo) {
            return base.Channel.WCFAddGrupo(nombreGrupo);
        }
        
        public System.Threading.Tasks.Task<bool> WCFAddGrupoAsync(string nombreGrupo) {
            return base.Channel.WCFAddGrupoAsync(nombreGrupo);
        }
        
        public bool WCFAddTramite(string titulo, string desc, double costo, int tiempo) {
            return base.Channel.WCFAddTramite(titulo, desc, costo, tiempo);
        }
        
        public System.Threading.Tasks.Task<bool> WCFAddTramiteAsync(string titulo, string desc, double costo, int tiempo) {
            return base.Channel.WCFAddTramiteAsync(titulo, desc, costo, tiempo);
        }
        
        public System.Collections.Generic.List<WCFService.DTOTramite> WCFGetTramite() {
            return base.Channel.WCFGetTramite();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WCFService.DTOTramite>> WCFGetTramiteAsync() {
            return base.Channel.WCFGetTramiteAsync();
        }
        
        public System.Collections.Generic.List<WCFService.DTOTramite> WCFListarTramites() {
            return base.Channel.WCFListarTramites();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WCFService.DTOTramite>> WCFListarTramitesAsync() {
            return base.Channel.WCFListarTramitesAsync();
        }
        
        public WCFService.DTOTramite WCFObtenerTramitePorId(int idTramite) {
            return base.Channel.WCFObtenerTramitePorId(idTramite);
        }
        
        public System.Threading.Tasks.Task<WCFService.DTOTramite> WCFObtenerTramitePorIdAsync(int idTramite) {
            return base.Channel.WCFObtenerTramitePorIdAsync(idTramite);
        }
        
        public void WCFEditarTramite(int Id, string Descripcion, double Costo, int Tiempo) {
            base.Channel.WCFEditarTramite(Id, Descripcion, Costo, Tiempo);
        }
        
        public System.Threading.Tasks.Task WCFEditarTramiteAsync(int Id, string Descripcion, double Costo, int Tiempo) {
            return base.Channel.WCFEditarTramiteAsync(Id, Descripcion, Costo, Tiempo);
        }
        
        public bool WCFAddEtapa(string Codigo, string Descripcion, int LapsoMax, int IdTramite) {
            return base.Channel.WCFAddEtapa(Codigo, Descripcion, LapsoMax, IdTramite);
        }
        
        public System.Threading.Tasks.Task<bool> WCFAddEtapaAsync(string Codigo, string Descripcion, int LapsoMax, int IdTramite) {
            return base.Channel.WCFAddEtapaAsync(Codigo, Descripcion, LapsoMax, IdTramite);
        }
        
        public System.Collections.Generic.List<WCFService.DTOEtapa> WCFListarEtapas() {
            return base.Channel.WCFListarEtapas();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WCFService.DTOEtapa>> WCFListarEtapasAsync() {
            return base.Channel.WCFListarEtapasAsync();
        }
        
        public bool WCFEditarEtapaCodDes(string codigo, string descripcion) {
            return base.Channel.WCFEditarEtapaCodDes(codigo, descripcion);
        }
        
        public System.Threading.Tasks.Task<bool> WCFEditarEtapaCodDesAsync(string codigo, string descripcion) {
            return base.Channel.WCFEditarEtapaCodDesAsync(codigo, descripcion);
        }
        
        public bool WCFGuardarTxt() {
            return base.Channel.WCFGuardarTxt();
        }
        
        public System.Threading.Tasks.Task<bool> WCFGuardarTxtAsync() {
            return base.Channel.WCFGuardarTxtAsync();
        }
        
        public bool WCFExisteNombreTramite(string nombreTramite) {
            return base.Channel.WCFExisteNombreTramite(nombreTramite);
        }
        
        public System.Threading.Tasks.Task<bool> WCFExisteNombreTramiteAsync(string nombreTramite) {
            return base.Channel.WCFExisteNombreTramiteAsync(nombreTramite);
        }
        
        public System.Collections.Generic.List<WCFService.DTOGrupo> WCFListarGrupos() {
            return base.Channel.WCFListarGrupos();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WCFService.DTOGrupo>> WCFListarGruposAsync() {
            return base.Channel.WCFListarGruposAsync();
        }
        
        public System.Collections.Generic.List<WCFService.DTOGrupo> WCFGetGrupo() {
            return base.Channel.WCFGetGrupo();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WCFService.DTOGrupo>> WCFGetGrupoAsync() {
            return base.Channel.WCFGetGrupoAsync();
        }
        
        public WCFService.DTOGrupo WCFObtenerGrupoPorId(int idGrupo) {
            return base.Channel.WCFObtenerGrupoPorId(idGrupo);
        }
        
        public System.Threading.Tasks.Task<WCFService.DTOGrupo> WCFObtenerGrupoPorIdAsync(int idGrupo) {
            return base.Channel.WCFObtenerGrupoPorIdAsync(idGrupo);
        }
        
        public void WCFEditGrupo(int idGrupo, string nombreGrupo) {
            base.Channel.WCFEditGrupo(idGrupo, nombreGrupo);
        }
        
        public System.Threading.Tasks.Task WCFEditGrupoAsync(int idGrupo, string nombreGrupo) {
            return base.Channel.WCFEditGrupoAsync(idGrupo, nombreGrupo);
        }
        
        public int WCFValidarUsuario(string usuario, string password) {
            return base.Channel.WCFValidarUsuario(usuario, password);
        }
        
        public System.Threading.Tasks.Task<int> WCFValidarUsuarioAsync(string usuario, string password) {
            return base.Channel.WCFValidarUsuarioAsync(usuario, password);
        }
        
        public string WCFGetNombreCompleto(string nombreUsuario) {
            return base.Channel.WCFGetNombreCompleto(nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<string> WCFGetNombreCompletoAsync(string nombreUsuario) {
            return base.Channel.WCFGetNombreCompletoAsync(nombreUsuario);
        }
        
        public System.Collections.Generic.List<WCFService.DTOGrupo> WCFListarGruposVacios() {
            return base.Channel.WCFListarGruposVacios();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WCFService.DTOGrupo>> WCFListarGruposVaciosAsync() {
            return base.Channel.WCFListarGruposVaciosAsync();
        }
        
        public void WCFEliminarGrupo(string nombreGrupo) {
            base.Channel.WCFEliminarGrupo(nombreGrupo);
        }
        
        public System.Threading.Tasks.Task WCFEliminarGrupoAsync(string nombreGrupo) {
            return base.Channel.WCFEliminarGrupoAsync(nombreGrupo);
        }
        
        public System.Collections.Generic.List<int> WCFListarPerfiles() {
            return base.Channel.WCFListarPerfiles();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<int>> WCFListarPerfilesAsync() {
            return base.Channel.WCFListarPerfilesAsync();
        }
        
        public bool WCFAddFuncionario(string email, string password, string perfil, string nombreCompleto) {
            return base.Channel.WCFAddFuncionario(email, password, perfil, nombreCompleto);
        }
        
        public System.Threading.Tasks.Task<bool> WCFAddFuncionarioAsync(string email, string password, string perfil, string nombreCompleto) {
            return base.Channel.WCFAddFuncionarioAsync(email, password, perfil, nombreCompleto);
        }
        
        public int WCFObtenerIdUSuario(string email) {
            return base.Channel.WCFObtenerIdUSuario(email);
        }
        
        public System.Threading.Tasks.Task<int> WCFObtenerIdUSuarioAsync(string email) {
            return base.Channel.WCFObtenerIdUSuarioAsync(email);
        }
        
        public bool WCFAddUsuarioGrupo(int idUsuario, int idGrupo) {
            return base.Channel.WCFAddUsuarioGrupo(idUsuario, idGrupo);
        }
        
        public System.Threading.Tasks.Task<bool> WCFAddUsuarioGrupoAsync(int idUsuario, int idGrupo) {
            return base.Channel.WCFAddUsuarioGrupoAsync(idUsuario, idGrupo);
        }
        
        public System.Collections.Generic.List<WCFService.DTOGrupo> WCFListarGrupoUsuario(int idUsuario) {
            return base.Channel.WCFListarGrupoUsuario(idUsuario);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WCFService.DTOGrupo>> WCFListarGrupoUsuarioAsync(int idUsuario) {
            return base.Channel.WCFListarGrupoUsuarioAsync(idUsuario);
        }
        
        public WCFService.DTOUsuario WCFObtenerUsuario(string email) {
            return base.Channel.WCFObtenerUsuario(email);
        }
        
        public System.Threading.Tasks.Task<WCFService.DTOUsuario> WCFObtenerUsuarioAsync(string email) {
            return base.Channel.WCFObtenerUsuarioAsync(email);
        }
        
        public System.Collections.Generic.List<WCFService.DTOUsuario> WCFListarFuncionarios() {
            return base.Channel.WCFListarFuncionarios();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WCFService.DTOUsuario>> WCFListarFuncionariosAsync() {
            return base.Channel.WCFListarFuncionariosAsync();
        }
        
        public bool WCFGuardarTxt_Grupos() {
            return base.Channel.WCFGuardarTxt_Grupos();
        }
        
        public System.Threading.Tasks.Task<bool> WCFGuardarTxt_GruposAsync() {
            return base.Channel.WCFGuardarTxt_GruposAsync();
        }
        
        public bool WCFGuardarTxt_Funcionarios() {
            return base.Channel.WCFGuardarTxt_Funcionarios();
        }
        
        public System.Threading.Tasks.Task<bool> WCFGuardarTxt_FuncionariosAsync() {
            return base.Channel.WCFGuardarTxt_FuncionariosAsync();
        }
        
        public bool WCFGuardarTxt_Tramites() {
            return base.Channel.WCFGuardarTxt_Tramites();
        }
        
        public System.Threading.Tasks.Task<bool> WCFGuardarTxt_TramitesAsync() {
            return base.Channel.WCFGuardarTxt_TramitesAsync();
        }
        
        public bool WCFAddGrupoTramite(WCFService.DTOGrupoTramite gt, string tituloTramiteUnico) {
            return base.Channel.WCFAddGrupoTramite(gt, tituloTramiteUnico);
        }
        
        public System.Threading.Tasks.Task<bool> WCFAddGrupoTramiteAsync(WCFService.DTOGrupoTramite gt, string tituloTramiteUnico) {
            return base.Channel.WCFAddGrupoTramiteAsync(gt, tituloTramiteUnico);
        }
        
        public int WCFAddGrupoDeGRupoTramitePorIdGT(int idGrupoTramite) {
            return base.Channel.WCFAddGrupoDeGRupoTramitePorIdGT(idGrupoTramite);
        }
        
        public System.Threading.Tasks.Task<int> WCFAddGrupoDeGRupoTramitePorIdGTAsync(int idGrupoTramite) {
            return base.Channel.WCFAddGrupoDeGRupoTramitePorIdGTAsync(idGrupoTramite);
        }
        
        public bool WCFEditarEtapa(string idEtapa, string Descripcion, int tiempo) {
            return base.Channel.WCFEditarEtapa(idEtapa, Descripcion, tiempo);
        }
        
        public System.Threading.Tasks.Task<bool> WCFEditarEtapaAsync(string idEtapa, string Descripcion, int tiempo) {
            return base.Channel.WCFEditarEtapaAsync(idEtapa, Descripcion, tiempo);
        }
        
        public WCFService.DTOEtapa WCFObtenerEtapaPorIdEtapa(string idEtapa) {
            return base.Channel.WCFObtenerEtapaPorIdEtapa(idEtapa);
        }
        
        public System.Threading.Tasks.Task<WCFService.DTOEtapa> WCFObtenerEtapaPorIdEtapaAsync(string idEtapa) {
            return base.Channel.WCFObtenerEtapaPorIdEtapaAsync(idEtapa);
        }
        
        public int WCFObtenerIdGrupoTramitePorIdTramite(string tituloTramite) {
            return base.Channel.WCFObtenerIdGrupoTramitePorIdTramite(tituloTramite);
        }
        
        public System.Threading.Tasks.Task<int> WCFObtenerIdGrupoTramitePorIdTramiteAsync(string tituloTramite) {
            return base.Channel.WCFObtenerIdGrupoTramitePorIdTramiteAsync(tituloTramite);
        }
        
        public System.Collections.Generic.List<WCFService.DTOGrupoTramite> WCFObtenerGrupoTramitePorIdTramite(string tituloTramite) {
            return base.Channel.WCFObtenerGrupoTramitePorIdTramite(tituloTramite);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WCFService.DTOGrupoTramite>> WCFObtenerGrupoTramitePorIdTramiteAsync(string tituloTramite) {
            return base.Channel.WCFObtenerGrupoTramitePorIdTramiteAsync(tituloTramite);
        }
    }
}
